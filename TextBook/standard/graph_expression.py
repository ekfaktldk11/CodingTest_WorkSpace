"""
탐색 알고리즘 DFS/BFS에 사용될 그래프 표현 방법
1. 인접 행렬 (Adjacency Matrix)
2. 인접 리스트 (Adjacency List)
"""

"""
1. 인접 행렬
- 2차원 배열로 그래프의 연결 관계를 표현하는 방식
- 2차원 배열에 각 노드가 연결된 형태(cost (?))를 기록하는 방식
- self to self : '0'
- 연결되어 있을 시, cost를 표기
- 연결 x : INF
"""
INF = 999999999 # 무한의 비용 / 보통 9를 아홉자리 수로 표기

# 2차원 리스트를 이용해 인접 행렬 표현
graph = [
    [0, 7, 5],
    [7, 0, INF],
    [5, INF, 0]
]

"""
2. 인접 리스트
- 인접 리스트는 '연결 리스트' 라는 자료구조를 이용해 구현
"""
# 행(Row)이 3개인 2차원 리스트로 인접 리스트 표현
graph = [[] for _ in range(3)]
# [[],[],[]]

# 노드 0에 연결된 노드 정보 저장(노드, 거리)
graph[0].append((1, 7))
graph[0].append((2, 5))

# 노드 1에 연결된 노드 정보 저장(노드, 거리)
graph[1].append((0, 7))

# 노드 2에 연결된 노드 정보 저장(노드, 거리)
graph[2].append((0, 5))

#[[(1, 7), (2, 5)], [(0, 7)], [(0, 5)]]