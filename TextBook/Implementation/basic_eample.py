"""
* 시각 문제 (기본 예제)
- 정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서
- '3'이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램을 작성
- (0 <= N <= 23)

- 입력 예시
5

- 출력 예시
11475
"""

"""
* 내 접근 방법
- 총 6개의 숫자 자리 00:00:00 에서 각각 3이 들어갈 수 있는 경우의 수를 따지고 6개의 각 경우를 모두 곱하려 함
- 순서대로 0 ~ 2 (총 3 가지 중 0개) / 0 ~ 4 (총 5 가지 중 1개) / 0 ~ 5 (총 6 가지 중 1 개) / 0 ~ 9 (총 10 가지 중 1개) / 0 ~ 5 (총 6 가지 중 1 개) / 0 ~ 9 (총 10 가지 중 1개)
- 근데 생각해 보니 24:03:12 이런 숫자는 나올 수 없기에 잘못된 접근이였고 점점 문제가 어렵다고 느껴짐
- 접근 방식의 잘못됨을 느끼고 권장 풀이 시간 15 분을 넘겨버림
"""

"""
* 해답
"""

# N을 입력받기
n = int(input())

count = 0
for i in range(n + 1):
    for j in range(60):
        for k in range(60):
            # 매 시각 안에 '3'이 포함되어 있다면 카운트 증가
            if '3' in str(i) + str(j) + str(k):
                count += 1
print(count)


"""
* 풀이 방법
- 시간에 대한 성격을 파악하면 문제는 간단해짐
- 하루는 총 86,000 초 니까 100,000 개도 되지 않으니 모든 초에 대한 경우의 수를 따져도 제한 시간내에 풀 수 있음
- 따라서 00시 부터 N시 까지 모든 시간 / 분에 대한 경우의 수를 따지면 됨
- 3중 반복 사용
"""

"""
* 결론
- if '3' in str(i) + str(j) + str(k): 의 조건으로 각 세개의 문자열을 합쳤을 때 해당문자열에
'3'이라는 문자가 포함되어 있는지 확인 가능
- 이러한 문제 유형은 완전 탐색(Brute Forcing)유형으로 분류되기도 함
- 일반적으로 알고리즘 문제를 풀 때는 확인(탐색)해야 할 전체 데이터의 개수가 100만개(1,000,000) 이하일 때 완전 탐색을 사용하는 것이 적절
"""